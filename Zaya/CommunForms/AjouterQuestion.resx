<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>