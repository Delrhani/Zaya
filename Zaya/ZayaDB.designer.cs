#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zaya
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Zaya")]
	public partial class ZayaDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCommentaire(Commentaire instance);
    partial void UpdateCommentaire(Commentaire instance);
    partial void DeleteCommentaire(Commentaire instance);
    partial void InsertUtilisateur(Utilisateur instance);
    partial void UpdateUtilisateur(Utilisateur instance);
    partial void DeleteUtilisateur(Utilisateur instance);
    partial void InsertLecon(Lecon instance);
    partial void UpdateLecon(Lecon instance);
    partial void DeleteLecon(Lecon instance);
    partial void InsertMatiere(Matiere instance);
    partial void UpdateMatiere(Matiere instance);
    partial void DeleteMatiere(Matiere instance);
    partial void InsertQuestion(Question instance);
    partial void UpdateQuestion(Question instance);
    partial void DeleteQuestion(Question instance);
    partial void InsertQuiz(Quiz instance);
    partial void UpdateQuiz(Quiz instance);
    partial void DeleteQuiz(Quiz instance);
    partial void InsertReponse(Reponse instance);
    partial void UpdateReponse(Reponse instance);
    partial void DeleteReponse(Reponse instance);
    partial void InsertReponseQuiz(ReponseQuiz instance);
    partial void UpdateReponseQuiz(ReponseQuiz instance);
    partial void DeleteReponseQuiz(ReponseQuiz instance);
    partial void InsertResultatQuiz(ResultatQuiz instance);
    partial void UpdateResultatQuiz(ResultatQuiz instance);
    partial void DeleteResultatQuiz(ResultatQuiz instance);
    partial void InsertTypeQuestion(TypeQuestion instance);
    partial void UpdateTypeQuestion(TypeQuestion instance);
    partial void DeleteTypeQuestion(TypeQuestion instance);
    partial void InsertTypeUtilisateur(TypeUtilisateur instance);
    partial void UpdateTypeUtilisateur(TypeUtilisateur instance);
    partial void DeleteTypeUtilisateur(TypeUtilisateur instance);
    #endregion
		
		public ZayaDBDataContext() : 
				base(global::Zaya.Properties.Settings.Default.ZayaConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ZayaDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZayaDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZayaDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZayaDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Commentaire> Commentaires
		{
			get
			{
				return this.GetTable<Commentaire>();
			}
		}
		
		public System.Data.Linq.Table<Utilisateur> Utilisateurs
		{
			get
			{
				return this.GetTable<Utilisateur>();
			}
		}
		
		public System.Data.Linq.Table<Lecon> Lecons
		{
			get
			{
				return this.GetTable<Lecon>();
			}
		}
		
		public System.Data.Linq.Table<Matiere> Matieres
		{
			get
			{
				return this.GetTable<Matiere>();
			}
		}
		
		public System.Data.Linq.Table<Question> Questions
		{
			get
			{
				return this.GetTable<Question>();
			}
		}
		
		public System.Data.Linq.Table<Quiz> Quizs
		{
			get
			{
				return this.GetTable<Quiz>();
			}
		}
		
		public System.Data.Linq.Table<Reponse> Reponses
		{
			get
			{
				return this.GetTable<Reponse>();
			}
		}
		
		public System.Data.Linq.Table<ReponseQuiz> ReponseQuizs
		{
			get
			{
				return this.GetTable<ReponseQuiz>();
			}
		}
		
		public System.Data.Linq.Table<ResultatQuiz> ResultatQuizs
		{
			get
			{
				return this.GetTable<ResultatQuiz>();
			}
		}
		
		public System.Data.Linq.Table<TypeQuestion> TypeQuestions
		{
			get
			{
				return this.GetTable<TypeQuestion>();
			}
		}
		
		public System.Data.Linq.Table<TypeUtilisateur> TypeUtilisateurs
		{
			get
			{
				return this.GetTable<TypeUtilisateur>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.encrypt", IsComposable=true)]
		public System.Data.Linq.Binary encrypt([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string pwd)
		{
			return ((System.Data.Linq.Binary)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pwd).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commentaire")]
	public partial class Commentaire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCommentaire;
		
		private System.Nullable<int> _idQuiz;
		
		private System.Nullable<int> _idLecon;
		
		private string _textCommentaire;
		
		private System.DateTime _dateCommentaire;
		
		private int _idUtilisateur;
		
		private EntityRef<Utilisateur> _Utilisateur;
		
		private EntityRef<Lecon> _Lecon;
		
		private EntityRef<Quiz> _Quiz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCommentaireChanging(int value);
    partial void OnidCommentaireChanged();
    partial void OnidQuizChanging(System.Nullable<int> value);
    partial void OnidQuizChanged();
    partial void OnidLeconChanging(System.Nullable<int> value);
    partial void OnidLeconChanged();
    partial void OntextCommentaireChanging(string value);
    partial void OntextCommentaireChanged();
    partial void OndateCommentaireChanging(System.DateTime value);
    partial void OndateCommentaireChanged();
    partial void OnidUtilisateurChanging(int value);
    partial void OnidUtilisateurChanged();
    #endregion
		
		public Commentaire()
		{
			this._Utilisateur = default(EntityRef<Utilisateur>);
			this._Lecon = default(EntityRef<Lecon>);
			this._Quiz = default(EntityRef<Quiz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCommentaire", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCommentaire
		{
			get
			{
				return this._idCommentaire;
			}
			set
			{
				if ((this._idCommentaire != value))
				{
					this.OnidCommentaireChanging(value);
					this.SendPropertyChanging();
					this._idCommentaire = value;
					this.SendPropertyChanged("idCommentaire");
					this.OnidCommentaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuiz", DbType="Int")]
		public System.Nullable<int> idQuiz
		{
			get
			{
				return this._idQuiz;
			}
			set
			{
				if ((this._idQuiz != value))
				{
					if (this._Quiz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidQuizChanging(value);
					this.SendPropertyChanging();
					this._idQuiz = value;
					this.SendPropertyChanged("idQuiz");
					this.OnidQuizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLecon", DbType="Int")]
		public System.Nullable<int> idLecon
		{
			get
			{
				return this._idLecon;
			}
			set
			{
				if ((this._idLecon != value))
				{
					if (this._Lecon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLeconChanging(value);
					this.SendPropertyChanging();
					this._idLecon = value;
					this.SendPropertyChanged("idLecon");
					this.OnidLeconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textCommentaire", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string textCommentaire
		{
			get
			{
				return this._textCommentaire;
			}
			set
			{
				if ((this._textCommentaire != value))
				{
					this.OntextCommentaireChanging(value);
					this.SendPropertyChanging();
					this._textCommentaire = value;
					this.SendPropertyChanged("textCommentaire");
					this.OntextCommentaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCommentaire", DbType="Date NOT NULL")]
		public System.DateTime dateCommentaire
		{
			get
			{
				return this._dateCommentaire;
			}
			set
			{
				if ((this._dateCommentaire != value))
				{
					this.OndateCommentaireChanging(value);
					this.SendPropertyChanging();
					this._dateCommentaire = value;
					this.SendPropertyChanged("dateCommentaire");
					this.OndateCommentaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilisateur", DbType="Int NOT NULL")]
		public int idUtilisateur
		{
			get
			{
				return this._idUtilisateur;
			}
			set
			{
				if ((this._idUtilisateur != value))
				{
					if (this._Utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilisateurChanging(value);
					this.SendPropertyChanging();
					this._idUtilisateur = value;
					this.SendPropertyChanged("idUtilisateur");
					this.OnidUtilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_Commentaire", Storage="_Utilisateur", ThisKey="idUtilisateur", OtherKey="idUtilisateur", IsForeignKey=true)]
		public Utilisateur Utilisateur
		{
			get
			{
				return this._Utilisateur.Entity;
			}
			set
			{
				Utilisateur previousValue = this._Utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._Utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilisateur.Entity = null;
						previousValue.Commentaires.Remove(this);
					}
					this._Utilisateur.Entity = value;
					if ((value != null))
					{
						value.Commentaires.Add(this);
						this._idUtilisateur = value.idUtilisateur;
					}
					else
					{
						this._idUtilisateur = default(int);
					}
					this.SendPropertyChanged("Utilisateur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lecon_Commentaire", Storage="_Lecon", ThisKey="idLecon", OtherKey="idLecon", IsForeignKey=true)]
		public Lecon Lecon
		{
			get
			{
				return this._Lecon.Entity;
			}
			set
			{
				Lecon previousValue = this._Lecon.Entity;
				if (((previousValue != value) 
							|| (this._Lecon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lecon.Entity = null;
						previousValue.Commentaires.Remove(this);
					}
					this._Lecon.Entity = value;
					if ((value != null))
					{
						value.Commentaires.Add(this);
						this._idLecon = value.idLecon;
					}
					else
					{
						this._idLecon = default(Nullable<int>);
					}
					this.SendPropertyChanged("Lecon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quiz_Commentaire", Storage="_Quiz", ThisKey="idQuiz", OtherKey="idQuiz", IsForeignKey=true)]
		public Quiz Quiz
		{
			get
			{
				return this._Quiz.Entity;
			}
			set
			{
				Quiz previousValue = this._Quiz.Entity;
				if (((previousValue != value) 
							|| (this._Quiz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quiz.Entity = null;
						previousValue.Commentaires.Remove(this);
					}
					this._Quiz.Entity = value;
					if ((value != null))
					{
						value.Commentaires.Add(this);
						this._idQuiz = value.idQuiz;
					}
					else
					{
						this._idQuiz = default(Nullable<int>);
					}
					this.SendPropertyChanged("Quiz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilisateur")]
	public partial class Utilisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUtilisateur;
		
		private string _nom;
		
		private string _prenom;
		
		private string _telephone;
		
		private System.Nullable<char> _sexe;
		
		private string _email;
		
		private string _username;
		
		private System.Data.Linq.Binary _pwd;
		
		private System.DateTime _dateInscription;
		
		private int _idTypeUtilisateur;
		
		private EntitySet<Commentaire> _Commentaires;
		
		private EntitySet<Lecon> _Lecons;
		
		private EntitySet<Quiz> _Quizs;
		
		private EntityRef<TypeUtilisateur> _TypeUtilisateur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUtilisateurChanging(int value);
    partial void OnidUtilisateurChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void OnsexeChanging(System.Nullable<char> value);
    partial void OnsexeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpwdChanging(System.Data.Linq.Binary value);
    partial void OnpwdChanged();
    partial void OndateInscriptionChanging(System.DateTime value);
    partial void OndateInscriptionChanged();
    partial void OnidTypeUtilisateurChanging(int value);
    partial void OnidTypeUtilisateurChanged();
    #endregion
		
		public Utilisateur()
		{
			this._Commentaires = new EntitySet<Commentaire>(new Action<Commentaire>(this.attach_Commentaires), new Action<Commentaire>(this.detach_Commentaires));
			this._Lecons = new EntitySet<Lecon>(new Action<Lecon>(this.attach_Lecons), new Action<Lecon>(this.detach_Lecons));
			this._Quizs = new EntitySet<Quiz>(new Action<Quiz>(this.attach_Quizs), new Action<Quiz>(this.detach_Quizs));
			this._TypeUtilisateur = default(EntityRef<TypeUtilisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilisateur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUtilisateur
		{
			get
			{
				return this._idUtilisateur;
			}
			set
			{
				if ((this._idUtilisateur != value))
				{
					this.OnidUtilisateurChanging(value);
					this.SendPropertyChanging();
					this._idUtilisateur = value;
					this.SendPropertyChanged("idUtilisateur");
					this.OnidUtilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(100)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="VarChar(20)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexe", DbType="Char(1)")]
		public System.Nullable<char> sexe
		{
			get
			{
				return this._sexe;
			}
			set
			{
				if ((this._sexe != value))
				{
					this.OnsexeChanging(value);
					this.SendPropertyChanging();
					this._sexe = value;
					this.SendPropertyChanged("sexe");
					this.OnsexeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary pwd
		{
			get
			{
				return this._pwd;
			}
			set
			{
				if ((this._pwd != value))
				{
					this.OnpwdChanging(value);
					this.SendPropertyChanging();
					this._pwd = value;
					this.SendPropertyChanged("pwd");
					this.OnpwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateInscription", DbType="Date NOT NULL")]
		public System.DateTime dateInscription
		{
			get
			{
				return this._dateInscription;
			}
			set
			{
				if ((this._dateInscription != value))
				{
					this.OndateInscriptionChanging(value);
					this.SendPropertyChanging();
					this._dateInscription = value;
					this.SendPropertyChanged("dateInscription");
					this.OndateInscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeUtilisateur", DbType="Int NOT NULL")]
		public int idTypeUtilisateur
		{
			get
			{
				return this._idTypeUtilisateur;
			}
			set
			{
				if ((this._idTypeUtilisateur != value))
				{
					if (this._TypeUtilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTypeUtilisateurChanging(value);
					this.SendPropertyChanging();
					this._idTypeUtilisateur = value;
					this.SendPropertyChanged("idTypeUtilisateur");
					this.OnidTypeUtilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_Commentaire", Storage="_Commentaires", ThisKey="idUtilisateur", OtherKey="idUtilisateur")]
		public EntitySet<Commentaire> Commentaires
		{
			get
			{
				return this._Commentaires;
			}
			set
			{
				this._Commentaires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_Lecon", Storage="_Lecons", ThisKey="idUtilisateur", OtherKey="idUtilisateur")]
		public EntitySet<Lecon> Lecons
		{
			get
			{
				return this._Lecons;
			}
			set
			{
				this._Lecons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_Quiz", Storage="_Quizs", ThisKey="idUtilisateur", OtherKey="idUtilisateur")]
		public EntitySet<Quiz> Quizs
		{
			get
			{
				return this._Quizs;
			}
			set
			{
				this._Quizs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeUtilisateur_Utilisateur", Storage="_TypeUtilisateur", ThisKey="idTypeUtilisateur", OtherKey="idTypeUtilisateur", IsForeignKey=true)]
		public TypeUtilisateur TypeUtilisateur
		{
			get
			{
				return this._TypeUtilisateur.Entity;
			}
			set
			{
				TypeUtilisateur previousValue = this._TypeUtilisateur.Entity;
				if (((previousValue != value) 
							|| (this._TypeUtilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeUtilisateur.Entity = null;
						previousValue.Utilisateurs.Remove(this);
					}
					this._TypeUtilisateur.Entity = value;
					if ((value != null))
					{
						value.Utilisateurs.Add(this);
						this._idTypeUtilisateur = value.idTypeUtilisateur;
					}
					else
					{
						this._idTypeUtilisateur = default(int);
					}
					this.SendPropertyChanged("TypeUtilisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Commentaires(Commentaire entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = this;
		}
		
		private void detach_Commentaires(Commentaire entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = null;
		}
		
		private void attach_Lecons(Lecon entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = this;
		}
		
		private void detach_Lecons(Lecon entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = null;
		}
		
		private void attach_Quizs(Quiz entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = this;
		}
		
		private void detach_Quizs(Quiz entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lecon")]
	public partial class Lecon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idLecon;
		
		private string _libelle;
		
		private int _idUtilisateur;
		
		private string _textLecon;
		
		private int _idMatiere;
		
		private EntitySet<Commentaire> _Commentaires;
		
		private EntitySet<Question> _Questions;
		
		private EntityRef<Utilisateur> _Utilisateur;
		
		private EntityRef<Matiere> _Matiere;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidLeconChanging(int value);
    partial void OnidLeconChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    partial void OnidUtilisateurChanging(int value);
    partial void OnidUtilisateurChanged();
    partial void OntextLeconChanging(string value);
    partial void OntextLeconChanged();
    partial void OnidMatiereChanging(int value);
    partial void OnidMatiereChanged();
    #endregion
		
		public Lecon()
		{
			this._Commentaires = new EntitySet<Commentaire>(new Action<Commentaire>(this.attach_Commentaires), new Action<Commentaire>(this.detach_Commentaires));
			this._Questions = new EntitySet<Question>(new Action<Question>(this.attach_Questions), new Action<Question>(this.detach_Questions));
			this._Utilisateur = default(EntityRef<Utilisateur>);
			this._Matiere = default(EntityRef<Matiere>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLecon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idLecon
		{
			get
			{
				return this._idLecon;
			}
			set
			{
				if ((this._idLecon != value))
				{
					this.OnidLeconChanging(value);
					this.SendPropertyChanging();
					this._idLecon = value;
					this.SendPropertyChanged("idLecon");
					this.OnidLeconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string libelle
		{
			get
			{
				return this._libelle;
			}
			set
			{
				if ((this._libelle != value))
				{
					this.OnlibelleChanging(value);
					this.SendPropertyChanging();
					this._libelle = value;
					this.SendPropertyChanged("libelle");
					this.OnlibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilisateur", DbType="Int NOT NULL")]
		public int idUtilisateur
		{
			get
			{
				return this._idUtilisateur;
			}
			set
			{
				if ((this._idUtilisateur != value))
				{
					if (this._Utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilisateurChanging(value);
					this.SendPropertyChanging();
					this._idUtilisateur = value;
					this.SendPropertyChanged("idUtilisateur");
					this.OnidUtilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textLecon", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string textLecon
		{
			get
			{
				return this._textLecon;
			}
			set
			{
				if ((this._textLecon != value))
				{
					this.OntextLeconChanging(value);
					this.SendPropertyChanging();
					this._textLecon = value;
					this.SendPropertyChanged("textLecon");
					this.OntextLeconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMatiere", DbType="Int NOT NULL")]
		public int idMatiere
		{
			get
			{
				return this._idMatiere;
			}
			set
			{
				if ((this._idMatiere != value))
				{
					if (this._Matiere.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMatiereChanging(value);
					this.SendPropertyChanging();
					this._idMatiere = value;
					this.SendPropertyChanged("idMatiere");
					this.OnidMatiereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lecon_Commentaire", Storage="_Commentaires", ThisKey="idLecon", OtherKey="idLecon")]
		public EntitySet<Commentaire> Commentaires
		{
			get
			{
				return this._Commentaires;
			}
			set
			{
				this._Commentaires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lecon_Question", Storage="_Questions", ThisKey="idLecon", OtherKey="idLecon")]
		public EntitySet<Question> Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				this._Questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_Lecon", Storage="_Utilisateur", ThisKey="idUtilisateur", OtherKey="idUtilisateur", IsForeignKey=true)]
		public Utilisateur Utilisateur
		{
			get
			{
				return this._Utilisateur.Entity;
			}
			set
			{
				Utilisateur previousValue = this._Utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._Utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilisateur.Entity = null;
						previousValue.Lecons.Remove(this);
					}
					this._Utilisateur.Entity = value;
					if ((value != null))
					{
						value.Lecons.Add(this);
						this._idUtilisateur = value.idUtilisateur;
					}
					else
					{
						this._idUtilisateur = default(int);
					}
					this.SendPropertyChanged("Utilisateur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Matiere_Lecon", Storage="_Matiere", ThisKey="idMatiere", OtherKey="idMatiere", IsForeignKey=true)]
		public Matiere Matiere
		{
			get
			{
				return this._Matiere.Entity;
			}
			set
			{
				Matiere previousValue = this._Matiere.Entity;
				if (((previousValue != value) 
							|| (this._Matiere.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Matiere.Entity = null;
						previousValue.Lecons.Remove(this);
					}
					this._Matiere.Entity = value;
					if ((value != null))
					{
						value.Lecons.Add(this);
						this._idMatiere = value.idMatiere;
					}
					else
					{
						this._idMatiere = default(int);
					}
					this.SendPropertyChanged("Matiere");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Commentaires(Commentaire entity)
		{
			this.SendPropertyChanging();
			entity.Lecon = this;
		}
		
		private void detach_Commentaires(Commentaire entity)
		{
			this.SendPropertyChanging();
			entity.Lecon = null;
		}
		
		private void attach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Lecon = this;
		}
		
		private void detach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Lecon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Matiere")]
	public partial class Matiere : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMatiere;
		
		private string _libelle;
		
		private EntitySet<Lecon> _Lecons;
		
		private EntitySet<Quiz> _Quizs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMatiereChanging(int value);
    partial void OnidMatiereChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    #endregion
		
		public Matiere()
		{
			this._Lecons = new EntitySet<Lecon>(new Action<Lecon>(this.attach_Lecons), new Action<Lecon>(this.detach_Lecons));
			this._Quizs = new EntitySet<Quiz>(new Action<Quiz>(this.attach_Quizs), new Action<Quiz>(this.detach_Quizs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMatiere", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMatiere
		{
			get
			{
				return this._idMatiere;
			}
			set
			{
				if ((this._idMatiere != value))
				{
					this.OnidMatiereChanging(value);
					this.SendPropertyChanging();
					this._idMatiere = value;
					this.SendPropertyChanged("idMatiere");
					this.OnidMatiereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string libelle
		{
			get
			{
				return this._libelle;
			}
			set
			{
				if ((this._libelle != value))
				{
					this.OnlibelleChanging(value);
					this.SendPropertyChanging();
					this._libelle = value;
					this.SendPropertyChanged("libelle");
					this.OnlibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Matiere_Lecon", Storage="_Lecons", ThisKey="idMatiere", OtherKey="idMatiere")]
		public EntitySet<Lecon> Lecons
		{
			get
			{
				return this._Lecons;
			}
			set
			{
				this._Lecons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Matiere_Quiz", Storage="_Quizs", ThisKey="idMatiere", OtherKey="idMatiere")]
		public EntitySet<Quiz> Quizs
		{
			get
			{
				return this._Quizs;
			}
			set
			{
				this._Quizs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lecons(Lecon entity)
		{
			this.SendPropertyChanging();
			entity.Matiere = this;
		}
		
		private void detach_Lecons(Lecon entity)
		{
			this.SendPropertyChanging();
			entity.Matiere = null;
		}
		
		private void attach_Quizs(Quiz entity)
		{
			this.SendPropertyChanging();
			entity.Matiere = this;
		}
		
		private void detach_Quizs(Quiz entity)
		{
			this.SendPropertyChanging();
			entity.Matiere = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Question")]
	public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idQuestion;
		
		private int _idLecon;
		
		private string _textQuestion;
		
		private int _idTypeQuestion;
		
		private EntitySet<Reponse> _Reponses;
		
		private EntitySet<ResultatQuiz> _ResultatQuizs;
		
		private EntityRef<Lecon> _Lecon;
		
		private EntityRef<TypeQuestion> _TypeQuestion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidQuestionChanging(int value);
    partial void OnidQuestionChanged();
    partial void OnidLeconChanging(int value);
    partial void OnidLeconChanged();
    partial void OntextQuestionChanging(string value);
    partial void OntextQuestionChanged();
    partial void OnidTypeQuestionChanging(int value);
    partial void OnidTypeQuestionChanged();
    #endregion
		
		public Question()
		{
			this._Reponses = new EntitySet<Reponse>(new Action<Reponse>(this.attach_Reponses), new Action<Reponse>(this.detach_Reponses));
			this._ResultatQuizs = new EntitySet<ResultatQuiz>(new Action<ResultatQuiz>(this.attach_ResultatQuizs), new Action<ResultatQuiz>(this.detach_ResultatQuizs));
			this._Lecon = default(EntityRef<Lecon>);
			this._TypeQuestion = default(EntityRef<TypeQuestion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuestion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idQuestion
		{
			get
			{
				return this._idQuestion;
			}
			set
			{
				if ((this._idQuestion != value))
				{
					this.OnidQuestionChanging(value);
					this.SendPropertyChanging();
					this._idQuestion = value;
					this.SendPropertyChanged("idQuestion");
					this.OnidQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLecon", DbType="Int NOT NULL")]
		public int idLecon
		{
			get
			{
				return this._idLecon;
			}
			set
			{
				if ((this._idLecon != value))
				{
					if (this._Lecon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLeconChanging(value);
					this.SendPropertyChanging();
					this._idLecon = value;
					this.SendPropertyChanged("idLecon");
					this.OnidLeconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textQuestion", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string textQuestion
		{
			get
			{
				return this._textQuestion;
			}
			set
			{
				if ((this._textQuestion != value))
				{
					this.OntextQuestionChanging(value);
					this.SendPropertyChanging();
					this._textQuestion = value;
					this.SendPropertyChanged("textQuestion");
					this.OntextQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeQuestion", DbType="Int NOT NULL")]
		public int idTypeQuestion
		{
			get
			{
				return this._idTypeQuestion;
			}
			set
			{
				if ((this._idTypeQuestion != value))
				{
					if (this._TypeQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTypeQuestionChanging(value);
					this.SendPropertyChanging();
					this._idTypeQuestion = value;
					this.SendPropertyChanged("idTypeQuestion");
					this.OnidTypeQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_Reponse", Storage="_Reponses", ThisKey="idQuestion", OtherKey="idQuestion")]
		public EntitySet<Reponse> Reponses
		{
			get
			{
				return this._Reponses;
			}
			set
			{
				this._Reponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_ResultatQuiz", Storage="_ResultatQuizs", ThisKey="idQuestion", OtherKey="idQuestion")]
		public EntitySet<ResultatQuiz> ResultatQuizs
		{
			get
			{
				return this._ResultatQuizs;
			}
			set
			{
				this._ResultatQuizs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lecon_Question", Storage="_Lecon", ThisKey="idLecon", OtherKey="idLecon", IsForeignKey=true)]
		public Lecon Lecon
		{
			get
			{
				return this._Lecon.Entity;
			}
			set
			{
				Lecon previousValue = this._Lecon.Entity;
				if (((previousValue != value) 
							|| (this._Lecon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lecon.Entity = null;
						previousValue.Questions.Remove(this);
					}
					this._Lecon.Entity = value;
					if ((value != null))
					{
						value.Questions.Add(this);
						this._idLecon = value.idLecon;
					}
					else
					{
						this._idLecon = default(int);
					}
					this.SendPropertyChanged("Lecon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeQuestion_Question", Storage="_TypeQuestion", ThisKey="idTypeQuestion", OtherKey="idTypeQuestion", IsForeignKey=true)]
		public TypeQuestion TypeQuestion
		{
			get
			{
				return this._TypeQuestion.Entity;
			}
			set
			{
				TypeQuestion previousValue = this._TypeQuestion.Entity;
				if (((previousValue != value) 
							|| (this._TypeQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeQuestion.Entity = null;
						previousValue.Questions.Remove(this);
					}
					this._TypeQuestion.Entity = value;
					if ((value != null))
					{
						value.Questions.Add(this);
						this._idTypeQuestion = value.idTypeQuestion;
					}
					else
					{
						this._idTypeQuestion = default(int);
					}
					this.SendPropertyChanged("TypeQuestion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reponses(Reponse entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_Reponses(Reponse entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
		
		private void attach_ResultatQuizs(ResultatQuiz entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_ResultatQuizs(ResultatQuiz entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quiz")]
	public partial class Quiz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idQuiz;
		
		private System.TimeSpan _duree;
		
		private System.TimeSpan _tempsEstime;
		
		private int _idMatiere;
		
		private int _idUtilisateur;
		
		private System.DateTime _dateQuiz;
		
		private EntitySet<Commentaire> _Commentaires;
		
		private EntitySet<ResultatQuiz> _ResultatQuizs;
		
		private EntityRef<Matiere> _Matiere;
		
		private EntityRef<Utilisateur> _Utilisateur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidQuizChanging(int value);
    partial void OnidQuizChanged();
    partial void OndureeChanging(System.TimeSpan value);
    partial void OndureeChanged();
    partial void OntempsEstimeChanging(System.TimeSpan value);
    partial void OntempsEstimeChanged();
    partial void OnidMatiereChanging(int value);
    partial void OnidMatiereChanged();
    partial void OnidUtilisateurChanging(int value);
    partial void OnidUtilisateurChanged();
    partial void OndateQuizChanging(System.DateTime value);
    partial void OndateQuizChanged();
    #endregion
		
		public Quiz()
		{
			this._Commentaires = new EntitySet<Commentaire>(new Action<Commentaire>(this.attach_Commentaires), new Action<Commentaire>(this.detach_Commentaires));
			this._ResultatQuizs = new EntitySet<ResultatQuiz>(new Action<ResultatQuiz>(this.attach_ResultatQuizs), new Action<ResultatQuiz>(this.detach_ResultatQuizs));
			this._Matiere = default(EntityRef<Matiere>);
			this._Utilisateur = default(EntityRef<Utilisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuiz", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idQuiz
		{
			get
			{
				return this._idQuiz;
			}
			set
			{
				if ((this._idQuiz != value))
				{
					this.OnidQuizChanging(value);
					this.SendPropertyChanging();
					this._idQuiz = value;
					this.SendPropertyChanged("idQuiz");
					this.OnidQuizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duree", DbType="Time NOT NULL")]
		public System.TimeSpan duree
		{
			get
			{
				return this._duree;
			}
			set
			{
				if ((this._duree != value))
				{
					this.OndureeChanging(value);
					this.SendPropertyChanging();
					this._duree = value;
					this.SendPropertyChanged("duree");
					this.OndureeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tempsEstime", DbType="Time NOT NULL")]
		public System.TimeSpan tempsEstime
		{
			get
			{
				return this._tempsEstime;
			}
			set
			{
				if ((this._tempsEstime != value))
				{
					this.OntempsEstimeChanging(value);
					this.SendPropertyChanging();
					this._tempsEstime = value;
					this.SendPropertyChanged("tempsEstime");
					this.OntempsEstimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMatiere", DbType="Int NOT NULL")]
		public int idMatiere
		{
			get
			{
				return this._idMatiere;
			}
			set
			{
				if ((this._idMatiere != value))
				{
					if (this._Matiere.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMatiereChanging(value);
					this.SendPropertyChanging();
					this._idMatiere = value;
					this.SendPropertyChanged("idMatiere");
					this.OnidMatiereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilisateur", DbType="Int NOT NULL")]
		public int idUtilisateur
		{
			get
			{
				return this._idUtilisateur;
			}
			set
			{
				if ((this._idUtilisateur != value))
				{
					if (this._Utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilisateurChanging(value);
					this.SendPropertyChanging();
					this._idUtilisateur = value;
					this.SendPropertyChanged("idUtilisateur");
					this.OnidUtilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateQuiz", DbType="Date NOT NULL")]
		public System.DateTime dateQuiz
		{
			get
			{
				return this._dateQuiz;
			}
			set
			{
				if ((this._dateQuiz != value))
				{
					this.OndateQuizChanging(value);
					this.SendPropertyChanging();
					this._dateQuiz = value;
					this.SendPropertyChanged("dateQuiz");
					this.OndateQuizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quiz_Commentaire", Storage="_Commentaires", ThisKey="idQuiz", OtherKey="idQuiz")]
		public EntitySet<Commentaire> Commentaires
		{
			get
			{
				return this._Commentaires;
			}
			set
			{
				this._Commentaires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quiz_ResultatQuiz", Storage="_ResultatQuizs", ThisKey="idQuiz", OtherKey="idQuiz")]
		public EntitySet<ResultatQuiz> ResultatQuizs
		{
			get
			{
				return this._ResultatQuizs;
			}
			set
			{
				this._ResultatQuizs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Matiere_Quiz", Storage="_Matiere", ThisKey="idMatiere", OtherKey="idMatiere", IsForeignKey=true)]
		public Matiere Matiere
		{
			get
			{
				return this._Matiere.Entity;
			}
			set
			{
				Matiere previousValue = this._Matiere.Entity;
				if (((previousValue != value) 
							|| (this._Matiere.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Matiere.Entity = null;
						previousValue.Quizs.Remove(this);
					}
					this._Matiere.Entity = value;
					if ((value != null))
					{
						value.Quizs.Add(this);
						this._idMatiere = value.idMatiere;
					}
					else
					{
						this._idMatiere = default(int);
					}
					this.SendPropertyChanged("Matiere");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_Quiz", Storage="_Utilisateur", ThisKey="idUtilisateur", OtherKey="idUtilisateur", IsForeignKey=true)]
		public Utilisateur Utilisateur
		{
			get
			{
				return this._Utilisateur.Entity;
			}
			set
			{
				Utilisateur previousValue = this._Utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._Utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilisateur.Entity = null;
						previousValue.Quizs.Remove(this);
					}
					this._Utilisateur.Entity = value;
					if ((value != null))
					{
						value.Quizs.Add(this);
						this._idUtilisateur = value.idUtilisateur;
					}
					else
					{
						this._idUtilisateur = default(int);
					}
					this.SendPropertyChanged("Utilisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Commentaires(Commentaire entity)
		{
			this.SendPropertyChanging();
			entity.Quiz = this;
		}
		
		private void detach_Commentaires(Commentaire entity)
		{
			this.SendPropertyChanging();
			entity.Quiz = null;
		}
		
		private void attach_ResultatQuizs(ResultatQuiz entity)
		{
			this.SendPropertyChanging();
			entity.Quiz = this;
		}
		
		private void detach_ResultatQuizs(ResultatQuiz entity)
		{
			this.SendPropertyChanging();
			entity.Quiz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reponse")]
	public partial class Reponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idReponse;
		
		private int _idQuestion;
		
		private bool _valider;
		
		private string _txtReponse;
		
		private EntitySet<ReponseQuiz> _ReponseQuizs;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidReponseChanging(int value);
    partial void OnidReponseChanged();
    partial void OnidQuestionChanging(int value);
    partial void OnidQuestionChanged();
    partial void OnvaliderChanging(bool value);
    partial void OnvaliderChanged();
    partial void OntxtReponseChanging(string value);
    partial void OntxtReponseChanged();
    #endregion
		
		public Reponse()
		{
			this._ReponseQuizs = new EntitySet<ReponseQuiz>(new Action<ReponseQuiz>(this.attach_ReponseQuizs), new Action<ReponseQuiz>(this.detach_ReponseQuizs));
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idReponse", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idReponse
		{
			get
			{
				return this._idReponse;
			}
			set
			{
				if ((this._idReponse != value))
				{
					this.OnidReponseChanging(value);
					this.SendPropertyChanging();
					this._idReponse = value;
					this.SendPropertyChanged("idReponse");
					this.OnidReponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuestion", DbType="Int NOT NULL")]
		public int idQuestion
		{
			get
			{
				return this._idQuestion;
			}
			set
			{
				if ((this._idQuestion != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidQuestionChanging(value);
					this.SendPropertyChanging();
					this._idQuestion = value;
					this.SendPropertyChanged("idQuestion");
					this.OnidQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valider", DbType="Bit NOT NULL")]
		public bool valider
		{
			get
			{
				return this._valider;
			}
			set
			{
				if ((this._valider != value))
				{
					this.OnvaliderChanging(value);
					this.SendPropertyChanging();
					this._valider = value;
					this.SendPropertyChanged("valider");
					this.OnvaliderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_txtReponse", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string txtReponse
		{
			get
			{
				return this._txtReponse;
			}
			set
			{
				if ((this._txtReponse != value))
				{
					this.OntxtReponseChanging(value);
					this.SendPropertyChanging();
					this._txtReponse = value;
					this.SendPropertyChanged("txtReponse");
					this.OntxtReponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reponse_ReponseQuiz", Storage="_ReponseQuizs", ThisKey="idReponse", OtherKey="idReponse")]
		public EntitySet<ReponseQuiz> ReponseQuizs
		{
			get
			{
				return this._ReponseQuizs;
			}
			set
			{
				this._ReponseQuizs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_Reponse", Storage="_Question", ThisKey="idQuestion", OtherKey="idQuestion", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.Reponses.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.Reponses.Add(this);
						this._idQuestion = value.idQuestion;
					}
					else
					{
						this._idQuestion = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReponseQuizs(ReponseQuiz entity)
		{
			this.SendPropertyChanging();
			entity.Reponse = this;
		}
		
		private void detach_ReponseQuizs(ReponseQuiz entity)
		{
			this.SendPropertyChanging();
			entity.Reponse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReponseQuiz")]
	public partial class ReponseQuiz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idReponseQuiz;
		
		private int _idResultatQuiz;
		
		private System.Nullable<int> _idReponse;
		
		private string _textReponse;
		
		private EntityRef<Reponse> _Reponse;
		
		private EntityRef<ResultatQuiz> _ResultatQuiz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidReponseQuizChanging(int value);
    partial void OnidReponseQuizChanged();
    partial void OnidResultatQuizChanging(int value);
    partial void OnidResultatQuizChanged();
    partial void OnidReponseChanging(System.Nullable<int> value);
    partial void OnidReponseChanged();
    partial void OntextReponseChanging(string value);
    partial void OntextReponseChanged();
    #endregion
		
		public ReponseQuiz()
		{
			this._Reponse = default(EntityRef<Reponse>);
			this._ResultatQuiz = default(EntityRef<ResultatQuiz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idReponseQuiz", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idReponseQuiz
		{
			get
			{
				return this._idReponseQuiz;
			}
			set
			{
				if ((this._idReponseQuiz != value))
				{
					this.OnidReponseQuizChanging(value);
					this.SendPropertyChanging();
					this._idReponseQuiz = value;
					this.SendPropertyChanged("idReponseQuiz");
					this.OnidReponseQuizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idResultatQuiz", DbType="Int NOT NULL")]
		public int idResultatQuiz
		{
			get
			{
				return this._idResultatQuiz;
			}
			set
			{
				if ((this._idResultatQuiz != value))
				{
					if (this._ResultatQuiz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidResultatQuizChanging(value);
					this.SendPropertyChanging();
					this._idResultatQuiz = value;
					this.SendPropertyChanged("idResultatQuiz");
					this.OnidResultatQuizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idReponse", DbType="Int")]
		public System.Nullable<int> idReponse
		{
			get
			{
				return this._idReponse;
			}
			set
			{
				if ((this._idReponse != value))
				{
					if (this._Reponse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidReponseChanging(value);
					this.SendPropertyChanging();
					this._idReponse = value;
					this.SendPropertyChanged("idReponse");
					this.OnidReponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textReponse", DbType="VarChar(50)")]
		public string textReponse
		{
			get
			{
				return this._textReponse;
			}
			set
			{
				if ((this._textReponse != value))
				{
					this.OntextReponseChanging(value);
					this.SendPropertyChanging();
					this._textReponse = value;
					this.SendPropertyChanged("textReponse");
					this.OntextReponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reponse_ReponseQuiz", Storage="_Reponse", ThisKey="idReponse", OtherKey="idReponse", IsForeignKey=true)]
		public Reponse Reponse
		{
			get
			{
				return this._Reponse.Entity;
			}
			set
			{
				Reponse previousValue = this._Reponse.Entity;
				if (((previousValue != value) 
							|| (this._Reponse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reponse.Entity = null;
						previousValue.ReponseQuizs.Remove(this);
					}
					this._Reponse.Entity = value;
					if ((value != null))
					{
						value.ReponseQuizs.Add(this);
						this._idReponse = value.idReponse;
					}
					else
					{
						this._idReponse = default(Nullable<int>);
					}
					this.SendPropertyChanged("Reponse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResultatQuiz_ReponseQuiz", Storage="_ResultatQuiz", ThisKey="idResultatQuiz", OtherKey="idResultatQuiz", IsForeignKey=true)]
		public ResultatQuiz ResultatQuiz
		{
			get
			{
				return this._ResultatQuiz.Entity;
			}
			set
			{
				ResultatQuiz previousValue = this._ResultatQuiz.Entity;
				if (((previousValue != value) 
							|| (this._ResultatQuiz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResultatQuiz.Entity = null;
						previousValue.ReponseQuizs.Remove(this);
					}
					this._ResultatQuiz.Entity = value;
					if ((value != null))
					{
						value.ReponseQuizs.Add(this);
						this._idResultatQuiz = value.idResultatQuiz;
					}
					else
					{
						this._idResultatQuiz = default(int);
					}
					this.SendPropertyChanged("ResultatQuiz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultatQuiz")]
	public partial class ResultatQuiz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idResultatQuiz;
		
		private int _idQuiz;
		
		private int _idQuestion;
		
		private EntitySet<ReponseQuiz> _ReponseQuizs;
		
		private EntityRef<Question> _Question;
		
		private EntityRef<Quiz> _Quiz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidResultatQuizChanging(int value);
    partial void OnidResultatQuizChanged();
    partial void OnidQuizChanging(int value);
    partial void OnidQuizChanged();
    partial void OnidQuestionChanging(int value);
    partial void OnidQuestionChanged();
    #endregion
		
		public ResultatQuiz()
		{
			this._ReponseQuizs = new EntitySet<ReponseQuiz>(new Action<ReponseQuiz>(this.attach_ReponseQuizs), new Action<ReponseQuiz>(this.detach_ReponseQuizs));
			this._Question = default(EntityRef<Question>);
			this._Quiz = default(EntityRef<Quiz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idResultatQuiz", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idResultatQuiz
		{
			get
			{
				return this._idResultatQuiz;
			}
			set
			{
				if ((this._idResultatQuiz != value))
				{
					this.OnidResultatQuizChanging(value);
					this.SendPropertyChanging();
					this._idResultatQuiz = value;
					this.SendPropertyChanged("idResultatQuiz");
					this.OnidResultatQuizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuiz", DbType="Int NOT NULL")]
		public int idQuiz
		{
			get
			{
				return this._idQuiz;
			}
			set
			{
				if ((this._idQuiz != value))
				{
					if (this._Quiz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidQuizChanging(value);
					this.SendPropertyChanging();
					this._idQuiz = value;
					this.SendPropertyChanged("idQuiz");
					this.OnidQuizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuestion", DbType="Int NOT NULL")]
		public int idQuestion
		{
			get
			{
				return this._idQuestion;
			}
			set
			{
				if ((this._idQuestion != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidQuestionChanging(value);
					this.SendPropertyChanging();
					this._idQuestion = value;
					this.SendPropertyChanged("idQuestion");
					this.OnidQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResultatQuiz_ReponseQuiz", Storage="_ReponseQuizs", ThisKey="idResultatQuiz", OtherKey="idResultatQuiz")]
		public EntitySet<ReponseQuiz> ReponseQuizs
		{
			get
			{
				return this._ReponseQuizs;
			}
			set
			{
				this._ReponseQuizs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_ResultatQuiz", Storage="_Question", ThisKey="idQuestion", OtherKey="idQuestion", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.ResultatQuizs.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.ResultatQuizs.Add(this);
						this._idQuestion = value.idQuestion;
					}
					else
					{
						this._idQuestion = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quiz_ResultatQuiz", Storage="_Quiz", ThisKey="idQuiz", OtherKey="idQuiz", IsForeignKey=true)]
		public Quiz Quiz
		{
			get
			{
				return this._Quiz.Entity;
			}
			set
			{
				Quiz previousValue = this._Quiz.Entity;
				if (((previousValue != value) 
							|| (this._Quiz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quiz.Entity = null;
						previousValue.ResultatQuizs.Remove(this);
					}
					this._Quiz.Entity = value;
					if ((value != null))
					{
						value.ResultatQuizs.Add(this);
						this._idQuiz = value.idQuiz;
					}
					else
					{
						this._idQuiz = default(int);
					}
					this.SendPropertyChanged("Quiz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReponseQuizs(ReponseQuiz entity)
		{
			this.SendPropertyChanging();
			entity.ResultatQuiz = this;
		}
		
		private void detach_ReponseQuizs(ReponseQuiz entity)
		{
			this.SendPropertyChanging();
			entity.ResultatQuiz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeQuestion")]
	public partial class TypeQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTypeQuestion;
		
		private string _libelle;
		
		private EntitySet<Question> _Questions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTypeQuestionChanging(int value);
    partial void OnidTypeQuestionChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    #endregion
		
		public TypeQuestion()
		{
			this._Questions = new EntitySet<Question>(new Action<Question>(this.attach_Questions), new Action<Question>(this.detach_Questions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeQuestion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTypeQuestion
		{
			get
			{
				return this._idTypeQuestion;
			}
			set
			{
				if ((this._idTypeQuestion != value))
				{
					this.OnidTypeQuestionChanging(value);
					this.SendPropertyChanging();
					this._idTypeQuestion = value;
					this.SendPropertyChanged("idTypeQuestion");
					this.OnidTypeQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string libelle
		{
			get
			{
				return this._libelle;
			}
			set
			{
				if ((this._libelle != value))
				{
					this.OnlibelleChanging(value);
					this.SendPropertyChanging();
					this._libelle = value;
					this.SendPropertyChanged("libelle");
					this.OnlibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeQuestion_Question", Storage="_Questions", ThisKey="idTypeQuestion", OtherKey="idTypeQuestion")]
		public EntitySet<Question> Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				this._Questions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.TypeQuestion = this;
		}
		
		private void detach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.TypeQuestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeUtilisateur")]
	public partial class TypeUtilisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTypeUtilisateur;
		
		private string _libelle;
		
		private EntitySet<Utilisateur> _Utilisateurs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTypeUtilisateurChanging(int value);
    partial void OnidTypeUtilisateurChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    #endregion
		
		public TypeUtilisateur()
		{
			this._Utilisateurs = new EntitySet<Utilisateur>(new Action<Utilisateur>(this.attach_Utilisateurs), new Action<Utilisateur>(this.detach_Utilisateurs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeUtilisateur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTypeUtilisateur
		{
			get
			{
				return this._idTypeUtilisateur;
			}
			set
			{
				if ((this._idTypeUtilisateur != value))
				{
					this.OnidTypeUtilisateurChanging(value);
					this.SendPropertyChanging();
					this._idTypeUtilisateur = value;
					this.SendPropertyChanged("idTypeUtilisateur");
					this.OnidTypeUtilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string libelle
		{
			get
			{
				return this._libelle;
			}
			set
			{
				if ((this._libelle != value))
				{
					this.OnlibelleChanging(value);
					this.SendPropertyChanging();
					this._libelle = value;
					this.SendPropertyChanged("libelle");
					this.OnlibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeUtilisateur_Utilisateur", Storage="_Utilisateurs", ThisKey="idTypeUtilisateur", OtherKey="idTypeUtilisateur")]
		public EntitySet<Utilisateur> Utilisateurs
		{
			get
			{
				return this._Utilisateurs;
			}
			set
			{
				this._Utilisateurs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Utilisateurs(Utilisateur entity)
		{
			this.SendPropertyChanging();
			entity.TypeUtilisateur = this;
		}
		
		private void detach_Utilisateurs(Utilisateur entity)
		{
			this.SendPropertyChanging();
			entity.TypeUtilisateur = null;
		}
	}
}
#pragma warning restore 1591
